name: CI Pipeline

on:
  push:
    branches: [master, develop]
  pull_request:
    branches: [master, develop]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint

      - name: Type check
        run: npm run type-check

      - name: Check formatting
        run: npm run format:check

      - name: Build project
        run: npm run build

      - name: Run tests
        run: npx jest --coverage

      - name: Upload coverage to Codecov
        if: success()
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  # --- Deployment job (runs only on push to master) ---
  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v4

      # Vercel deployment
      - name: Deploy to Vercel (prod)
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          vercel-args: --prod

      # Assume AWS role via OIDC
      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: github-actions

      # Tell Amplify to build/deploy the connected branch
      - name: Trigger Amplify build (start job)
        run: |
          aws amplify start-job \
            --app-id ${{ secrets.AMPLIFY_APP_ID }} \
            --branch-name ${{ secrets.AMPLIFY_BRANCH }} \
            --job-type RELEASE \
            --commit-id $GITHUB_SHA \
            --commit-message "CI deploy $GITHUB_SHA"

      # Optional sanity check
      - name: Who am I?
        run: aws sts get-caller-identity

  # --- Slack/Discord notification on failure ---
  notify-on-failure:
    needs: [build-and-test, deploy]
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
